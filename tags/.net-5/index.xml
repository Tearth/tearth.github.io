<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>.NET 5 on Tearth's homepage</title><link>https://tearth.dev/tags/.net-5/</link><description>Recent content in .NET 5 on Tearth's homepage</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 07 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://tearth.dev/tags/.net-5/index.xml" rel="self" type="application/rss+xml"/><item><title>Inlining of intrinsic functions in .NET 5</title><link>https://tearth.dev/posts/inlining-of-intrinsic-functions-in-dot-net-5/</link><pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate><guid>https://tearth.dev/posts/inlining-of-intrinsic-functions-in-dot-net-5/</guid><description>&lt;p>For the last months, I was focused on developing &lt;a href="https://github.com/Tearth/Cosette">Cosette&lt;/a> chess engine, toying with a very wide spectrum of algorithms and language optimizations. The second one was especially interesting because of &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/dotnet-five">.NET 5 release&lt;/a>, which brings a few interesting speed improvements (I will try to write something about them in the context of the engine soon). In this article, I will show an interesting behavior of inlining intrinsic function in some specific case which led to the dropping of performance in the chess engine.&lt;/p></description></item></channel></rss>