<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chess on Tearth's blog</title><link>https://tearth.dev/tags/chess/</link><description>Recent content in Chess on Tearth's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 20 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://tearth.dev/tags/chess/index.xml" rel="self" type="application/rss+xml"/><item><title>Performance of chess engines written in C#, part 1</title><link>https://tearth.dev/posts/performance-of-chess-engines-written-in-csharp-part-1/</link><pubDate>Sun, 20 Sep 2020 00:00:00 +0000</pubDate><guid>https://tearth.dev/posts/performance-of-chess-engines-written-in-csharp-part-1/</guid><description>&lt;p>Last month was quite busy - I&amp;rsquo;ve started a new project called Cosette, which is a brand new chess engine written in C# for .NET Core platform. It&amp;rsquo;s not my first project of this kind (a few years ago I made &lt;a href="https://github.com/Tearth/Proxima-b-2.0">Proxima b 2.0&lt;/a> (C#), together with even older &lt;a href="https://github.com/Tearth/Proxima-b">Proxima b&lt;/a> (C++)), so using the gained experience I can finally write a few words about performance tips and tricks, especially in C# language.&lt;/p></description></item></channel></rss>