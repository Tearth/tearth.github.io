<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chess programming on Tearth's homepage</title><link>https://tearth.dev/categories/chess-programming/</link><description>Recent content in Chess programming on Tearth's homepage</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 12 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://tearth.dev/categories/chess-programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Performance of chess engines written in C#, part 2</title><link>https://tearth.dev/posts/performance-of-chess-engines-written-in-csharp-part-2/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://tearth.dev/posts/performance-of-chess-engines-written-in-csharp-part-2/</guid><description>&lt;p>Half-year ago I did a small text about &lt;a href="https://tearth.dev/posts/performance-of-chess-engines-written-in-csharp-part-1/">writing chess engines in C# and performance issues related to it&lt;/a>, where I presented a few interesting methods of optimizing the engine. Today, I want to extend it a bit by new elements, some of them related to the lastly released .NET 5 - they aren&amp;rsquo;t game-changers, but can nicely improve some parts of code.&lt;/p></description></item><item><title>New bitboard viewer for chess developers</title><link>https://tearth.dev/posts/new-bitboard-viewer-for-chess-developers/</link><pubDate>Sat, 13 Feb 2021 00:00:00 +0000</pubDate><guid>https://tearth.dev/posts/new-bitboard-viewer-for-chess-developers/</guid><description>&lt;p>Just a quick announcement - I made a new bitboard viewer, as a backup for the amazing &lt;a href="https://gekomad.github.io/Cinnamon/BitboardCalculator/">bitboard calculator made by gekomad&lt;/a> which supports my chess development since the beginning. I hope it will be helpful for some of you!&lt;/p>
&lt;p>Site: &lt;a href="https://tearth.dev/bitboard-viewer/">https://tearth.dev/bitboard-viewer/&lt;/a> (with source code available &lt;a href="https://github.com/Tearth/Bitboard-Viewer">here&lt;/a>)&lt;/p></description></item><item><title>Performance of chess engines written in C#, part 1</title><link>https://tearth.dev/posts/performance-of-chess-engines-written-in-csharp-part-1/</link><pubDate>Sun, 20 Sep 2020 00:00:00 +0000</pubDate><guid>https://tearth.dev/posts/performance-of-chess-engines-written-in-csharp-part-1/</guid><description>&lt;p>Last month was quite busy - I&amp;rsquo;ve started a new project called Cosette, which is a brand new chess engine written in C# for .NET Core platform. It&amp;rsquo;s not my first project of this kind (a few years ago I made &lt;a href="https://github.com/Tearth/Proxima-b-2.0">Proxima b 2.0&lt;/a> (C#), together with even older &lt;a href="https://github.com/Tearth/Proxima-b">Proxima b&lt;/a> (C++)), so using the gained experience I can finally write a few words about performance tips and tricks, especially in C# language.&lt;/p></description></item></channel></rss>