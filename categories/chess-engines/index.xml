<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chess engines on Tearth's homepage</title><link>https://tearth.dev/categories/chess-engines/</link><description>Recent content in Chess engines on Tearth's homepage</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 31 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://tearth.dev/categories/chess-engines/index.xml" rel="self" type="application/rss+xml"/><item><title>Inanis 1.1.0 released</title><link>https://tearth.dev/posts/inanis-1-1-0-released/</link><pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate><guid>https://tearth.dev/posts/inanis-1-1-0-released/</guid><description>&lt;p>Major update of the &lt;a href="https://github.com/Tearth/Inanis">Inanis&lt;/a> chess engine, introducing a lot of new features and improvements: Syzygy tablebases, MultiPV, adjusted evaluation and more. Full changelog below.&lt;/p>
&lt;p>&lt;strong>Strength&lt;/strong>: 2800 Elo, &lt;strong>Link&lt;/strong>: &lt;a href="https://github.com/Tearth/Inanis/releases/tag/v1.1.0">https://github.com/Tearth/Inanis/releases/tag/v1.1.0&lt;/a>&lt;/p></description></item><item><title>A few thoughts about testing chess engines</title><link>https://tearth.dev/posts/a-few-thoughts-about-testing-chess-engines/</link><pubDate>Fri, 22 Jul 2022 00:00:00 +0000</pubDate><guid>https://tearth.dev/posts/a-few-thoughts-about-testing-chess-engines/</guid><description>&lt;p>My adventure with chess engine development started a good few years ago, and one of the issues I&amp;rsquo;ve definitely struggled with a lot was: how to test if a new build with a very sound feature is actually performing better than the old one. This article is a summary of the experience I gained after four engines, where each of them had a different methodology.&lt;/p></description></item><item><title>Inanis 1.0.1 released</title><link>https://tearth.dev/posts/inanis-1-0-1-released/</link><pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate><guid>https://tearth.dev/posts/inanis-1-0-1-released/</guid><description>&lt;p>A small patch for the &lt;a href="https://github.com/Tearth/Inanis">Inanis&lt;/a>, addressing bugs found by the &lt;a href="http://talkchess.com/">TalkChess&lt;/a> community. The most important one fixes random crashes caused by the move legality check, giving false indications in rare cases. In the result, illegal moves were processed which led to the board state irreversibly corrupted.&lt;/p>
&lt;p>&lt;strong>Strength&lt;/strong>: 2750 Elo, &lt;strong>Link&lt;/strong>: &lt;a href="https://github.com/Tearth/Inanis/releases/tag/v1.0.1">https://github.com/Tearth/Inanis/releases/tag/v1.0.1&lt;/a>&lt;/p></description></item><item><title>Inanis 1.0.0 released</title><link>https://tearth.dev/posts/inanis-1-0-0-released/</link><pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate><guid>https://tearth.dev/posts/inanis-1-0-0-released/</guid><description>&lt;p>The first version of &lt;a href="https://github.com/Tearth/Inanis">Inanis&lt;/a>, a brand new chess engine written in Rust, is finally out! I&amp;rsquo;ve tried to make it as much feature-complete as possible, so it&amp;rsquo;s fully usable with any GUI supporting UCI protocol. If you find any bug, please &lt;a href="https://github.com/Tearth/Inanis/issues">make an issue&lt;/a> with possibly the most detailed description and steps to reproduce the problem, so I can investigate it.&lt;/p>
&lt;p>&lt;strong>Strength&lt;/strong>: 2750 Elo, &lt;strong>Link&lt;/strong>: &lt;a href="https://github.com/Tearth/Inanis/releases/tag/v1.0.0">https://github.com/Tearth/Inanis/releases/tag/v1.0.0&lt;/a>&lt;/p></description></item><item><title>Performance of chess engines written in C#, part 2</title><link>https://tearth.dev/posts/performance-of-chess-engines-written-in-csharp-part-2/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://tearth.dev/posts/performance-of-chess-engines-written-in-csharp-part-2/</guid><description>&lt;p>Half-year ago I did a small text about &lt;a href="https://tearth.dev/posts/performance-of-chess-engines-written-in-csharp-part-1/">writing chess engines in C# and performance issues related to it&lt;/a>, where I presented a few interesting methods of optimizing the engine. Today, I want to extend it a bit by new elements, some of them related to the lastly released .NET 5 - they aren&amp;rsquo;t game-changers, but can nicely improve some parts of code.&lt;/p></description></item><item><title>New bitboard viewer for chess engine developers</title><link>https://tearth.dev/posts/new-bitboard-viewer-for-chess-engine-developers/</link><pubDate>Sat, 13 Feb 2021 00:00:00 +0000</pubDate><guid>https://tearth.dev/posts/new-bitboard-viewer-for-chess-engine-developers/</guid><description>&lt;p>Just a quick announcement - I&amp;rsquo;ve made a new bitboard viewer, as a backup for the amazing &lt;a href="https://gekomad.github.io/Cinnamon/BitboardCalculator/">bitboard calculator made by gekomad&lt;/a> which supports my chess development since the beginning. I hope it will be helpful for some of you!&lt;/p>
&lt;p>&lt;strong>Link&lt;/strong>: &lt;a href="https://tearth.dev/bitboard-viewer/">https://tearth.dev/bitboard-viewer/&lt;/a> (with source code available &lt;a href="https://github.com/Tearth/Bitboard-Viewer">here&lt;/a>)&lt;/p></description></item><item><title>Performance of chess engines written in C#, part 1</title><link>https://tearth.dev/posts/performance-of-chess-engines-written-in-csharp-part-1/</link><pubDate>Sun, 20 Sep 2020 00:00:00 +0000</pubDate><guid>https://tearth.dev/posts/performance-of-chess-engines-written-in-csharp-part-1/</guid><description>&lt;p>Last month was quite busy - I&amp;rsquo;ve started a new project called Cosette, which is a brand new chess engine written in C# for .NET Core platform. It&amp;rsquo;s not my first project of this kind (a few years ago I made &lt;a href="https://github.com/Tearth/Proxima-b-2.0">Proxima b 2.0&lt;/a> (C#), together with even older &lt;a href="https://github.com/Tearth/Proxima-b">Proxima b&lt;/a> (C++)), so using the gained experience I can finally write a few words about performance tips and tricks, especially in C# language.&lt;/p></description></item></channel></rss>